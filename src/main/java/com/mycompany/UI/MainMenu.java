/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.UI;

import com.mycompany.agile.Project;
import com.mycompany.agile.Task;
import com.mycompany.agile.Team;
import com.mycompany.agile.TeamMember;
import java.io.File;
import java.io.IOException;
import java.lang.reflect.Member;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import net.sf.mpxj.MPXJException;

/**
 *
 * @author Hecta
 */
public class MainMenu extends javax.swing.JFrame {
    
    DefaultTableModel modeloTasks = new DefaultTableModel();
    DefaultTableModel modeloResources = new DefaultTableModel();
    
    Path path;
    
    // Proyecto
    Project project = new Project();

    /**
     * Creates new form MainMenu
     */
    public MainMenu() {
        initComponents();
        this.setTitle("GetItDone");
        this.setLocationRelativeTo(null);
        
        modeloTasks.addColumn("ID");
        modeloTasks.addColumn("Task Name");
        modeloTasks.addColumn("Duration");
        modeloTasks.addColumn("Start");
        modeloTasks.addColumn("Finish");
        modeloTasks.addColumn("Resources");
        
        modeloResources.addColumn("ID");
        modeloResources.addColumn("Name");
        modeloResources.addColumn("Role");
        
        refreshTableTasks();
        refreshTableResources();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        TaskIDText1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        TaskNameText1 = new javax.swing.JTextField();
        Add1 = new javax.swing.JButton();
        Delete1 = new javax.swing.JButton();
        Edit1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TaskTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        TaskIDText = new javax.swing.JTextField();
        TaskNameText = new javax.swing.JTextField();
        AddTask = new javax.swing.JButton();
        DeleteTask = new javax.swing.JButton();
        EditTask = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ResourceTable = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        ResourceDescText = new javax.swing.JTextField();
        ResourceNameText = new javax.swing.JTextField();
        ResourceIDText = new javax.swing.JTextField();
        AddResource = new javax.swing.JButton();
        RemoveResource = new javax.swing.JButton();
        EditResource = new javax.swing.JButton();
        Save = new javax.swing.JButton();

        jLabel3.setText("ID");

        jLabel4.setText("Name");

        Add1.setText("Add");

        Delete1.setText("Delete");

        Edit1.setText("Edit");

        jLabel8.setText("jLabel8");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Import");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        TaskTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TaskTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TaskTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TaskTable);

        jLabel1.setText("ID");

        jLabel2.setText("Name");

        TaskIDText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TaskIDTextActionPerformed(evt);
            }
        });

        TaskNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TaskNameTextActionPerformed(evt);
            }
        });

        AddTask.setText("Add");
        AddTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddTaskActionPerformed(evt);
            }
        });

        DeleteTask.setText("Delete");
        DeleteTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteTaskActionPerformed(evt);
            }
        });

        EditTask.setText("Edit");
        EditTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditTaskActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 776, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(18, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(TaskIDText)
                            .addComponent(TaskNameText, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(AddTask)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DeleteTask)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EditTask)
                        .addGap(62, 62, 62))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(TaskIDText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddTask)
                    .addComponent(DeleteTask)
                    .addComponent(EditTask))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(TaskNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Task", jPanel1);

        ResourceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        ResourceTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ResourceTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(ResourceTable);

        jLabel5.setText("ID");

        jLabel6.setText("Name");

        jLabel7.setText("Role");

        ResourceDescText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResourceDescTextActionPerformed(evt);
            }
        });

        ResourceNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResourceNameTextActionPerformed(evt);
            }
        });

        ResourceIDText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResourceIDTextActionPerformed(evt);
            }
        });

        AddResource.setText("Add");
        AddResource.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddResourceActionPerformed(evt);
            }
        });

        RemoveResource.setText("Delete");
        RemoveResource.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveResourceActionPerformed(evt);
            }
        });

        EditResource.setText("Edit");
        EditResource.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditResourceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 775, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ResourceIDText)
                            .addComponent(ResourceNameText)
                            .addComponent(ResourceDescText, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                        .addGap(195, 195, 195)
                        .addComponent(AddResource)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RemoveResource)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EditResource)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(ResourceIDText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddResource)
                    .addComponent(RemoveResource)
                    .addComponent(EditResource))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(ResourceNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(ResourceDescText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Resource", jPanel2);

        Save.setText("Save");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(Save)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jTabbedPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(Save))
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane2))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();

        
        // Open dialog and select file
        //fc.showOpenDialog(null);
        
        if (fc.showOpenDialog(this) != JFileChooser.APPROVE_OPTION) {
            return;
        }
        File file = fc.getSelectedFile();
        String filename = file.getAbsolutePath();
        
        // Send path to Project
        //Project project = new Project("Project1", "1234", "a test");
        //project.getTeam().setName("B");

        path = Paths.get(filename);

        try {
            project.load(file.toPath());
        } catch (MPXJException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }

        System.out.println(project);
        
        refreshTableTasks();
        refreshTableResources();
        //JTextField.setText(filename);

    }//GEN-LAST:event_jButton1ActionPerformed

    private void TaskIDTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TaskIDTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TaskIDTextActionPerformed

    private void AddTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddTaskActionPerformed
        // TODO add your handling code here:        
        try {
            Task task = new Task();
            task.setID(Integer.parseInt(TaskIDText.getText()));
            task.setName(TaskNameText.getText());
            project.getTasks().add(task);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,"Error");
        }
        refreshTableTasks();
    }//GEN-LAST:event_AddTaskActionPerformed

    private void DeleteTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteTaskActionPerformed
        // TODO add your handling code here:
        if(TaskTable.getSelectedRowCount()== 1) {
            // remove selected row from project's tasks
            project.getTasks().remove(TaskTable.getSelectedRow());
            modeloTasks.removeRow(TaskTable.getSelectedRow());
        } else {
            if(TaskTable.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Table is empty");
            } else {
                JOptionPane.showMessageDialog(this, "Select a single row");
            }
        }
        refreshTableTasks();
    }//GEN-LAST:event_DeleteTaskActionPerformed

    private void EditTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditTaskActionPerformed
        // TODO add your handling code here:
        if(TaskTable.getSelectedRowCount() == 1) {
            // if single row is selected then update
            String ID = TaskIDText.getText();
            String Name = TaskNameText.getText();
            
            // set updated values on table row
            modeloTasks.setValueAt(ID, TaskTable.getSelectedRow(), 0);
            modeloTasks.setValueAt(Name, TaskTable.getSelectedRow(), 1);
            project.getTasks().get(TaskTable.getSelectedRow()).setID(Integer.parseInt(ID));
            project.getTasks().get(TaskTable.getSelectedRow()).setName(Name);
        }else {
            if(TaskTable.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Table is empty");
            } else {
                JOptionPane.showMessageDialog(this, "Select a single row");
            }
        }
        refreshTableTasks();
    }//GEN-LAST:event_EditTaskActionPerformed

    private void ResourceIDTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResourceIDTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ResourceIDTextActionPerformed

    private void ResourceNameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResourceNameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ResourceNameTextActionPerformed

    private void ResourceDescTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResourceDescTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ResourceDescTextActionPerformed

    private void AddResourceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddResourceActionPerformed
        // TODO add your handling code here:
        try {
            TeamMember member = new TeamMember();
            member.setID(ResourceIDText.getText());
            member.setName(ResourceNameText.getText());
            member.setRole(ResourceDescText.getText());
            project.getTeam().getMembers().add(member);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,"Error");
        }
        refreshTableResources();
    }//GEN-LAST:event_AddResourceActionPerformed

    private void RemoveResourceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveResourceActionPerformed
        // TODO add your handling code here:
        if(ResourceTable.getSelectedRowCount()== 1) {
            // remove selected row from project's tasks
            project.getTeam().getMembers().remove(ResourceTable.getSelectedRow());
            modeloResources.removeRow(ResourceTable.getSelectedRow());
        } else {
            if(ResourceTable.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Table is empty");
            } else {
                JOptionPane.showMessageDialog(this, "Select a single row");
            }
        }
        refreshTableResources();
    }//GEN-LAST:event_RemoveResourceActionPerformed

    private void EditResourceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditResourceActionPerformed
        // TODO add your handling code here:
        if(ResourceTable.getSelectedRowCount() == 1) {
            // if single row is selected then update
            String ID = ResourceIDText.getText();
            String Name = ResourceNameText.getText();
            String Role = ResourceDescText.getText();
            
            // set updated values on table row
            modeloResources.setValueAt(ID, ResourceTable.getSelectedRow(), 0);
            modeloResources.setValueAt(Name, ResourceTable.getSelectedRow(), 1);
            modeloResources.setValueAt(Role, ResourceTable.getSelectedRow(), 2);
            project.getTeam().getMembers().get(ResourceTable.getSelectedRow()).setID(ID);
            project.getTeam().getMembers().get(ResourceTable.getSelectedRow()).setName(Name);
            project.getTeam().getMembers().get(ResourceTable.getSelectedRow()).setRole(Role);
        }else {
            if(ResourceTable.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Table is empty");
            } else {
                JOptionPane.showMessageDialog(this, "Select a single row");
            }
        }
        refreshTableResources();
    }//GEN-LAST:event_EditResourceActionPerformed

    private void TaskNameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TaskNameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TaskNameTextActionPerformed

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        try {
            // TODO add your handling code here:
            project.write(path);
        } catch (MPXJException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_SaveActionPerformed

    private void TaskTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TaskTableMouseClicked
        // TODO add your handling code here:
        String tblID = modeloTasks.getValueAt(TaskTable.getSelectedRow(), 0).toString();
        String tblName = modeloTasks.getValueAt(TaskTable.getSelectedRow(), 1).toString();
        
        // set to textfield
        TaskIDText.setText(tblID);
        TaskNameText.setText(tblName);
        
    }//GEN-LAST:event_TaskTableMouseClicked

    private void ResourceTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ResourceTableMouseClicked
        // TODO add your handling code here:
        String tblID = modeloResources.getValueAt(ResourceTable.getSelectedRow(), 0).toString();
        String tblName = modeloResources.getValueAt(ResourceTable.getSelectedRow(), 1).toString();
        //String tblRole = modeloResources.getValueAt(ResourceTable.getSelectedRow(), 2).toString();
        
        // set to textfield
        ResourceIDText.setText(tblID);
        ResourceNameText.setText(tblName);
        //ResourceDescText.setText(tblRole);
    }//GEN-LAST:event_ResourceTableMouseClicked

    /**
     * Refresh Table
     */
    public void refreshTableTasks() {
        // Delete all elements from table
        while (modeloTasks.getRowCount()> 0) {            
            modeloTasks.removeRow(0);
        }
        
        for (Task task : project.getTasks()) {
            Object a[] = new Object[6];
            a[0] = task.getID();
            a[1] = task.getName();
            a[5] = project.getTeam().getMembers();
            modeloTasks.addRow(a);
        }
        TaskTable.setModel(modeloTasks);
    }
    
    public void refreshTableResources() {
        // Delete all elements from table
        while (modeloResources.getRowCount()> 0) {            
            modeloResources.removeRow(0);
        }
        
        for (TeamMember member : project.getTeam().getMembers() ) {
            Object a[] = new Object[3];
            a[0] = member.getID();
            a[1] = member.getName();
            a[2] = member.getRole();
            modeloResources.addRow(a);
        }
        ResourceTable.setModel(modeloResources);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add1;
    private javax.swing.JButton AddResource;
    private javax.swing.JButton AddTask;
    private javax.swing.JButton Delete1;
    private javax.swing.JButton DeleteTask;
    private javax.swing.JButton Edit1;
    private javax.swing.JButton EditResource;
    private javax.swing.JButton EditTask;
    private javax.swing.JButton RemoveResource;
    private javax.swing.JTextField ResourceDescText;
    private javax.swing.JTextField ResourceIDText;
    private javax.swing.JTextField ResourceNameText;
    private javax.swing.JTable ResourceTable;
    private javax.swing.JButton Save;
    private javax.swing.JTextField TaskIDText;
    private javax.swing.JTextField TaskIDText1;
    private javax.swing.JTextField TaskNameText;
    private javax.swing.JTextField TaskNameText1;
    private javax.swing.JTable TaskTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane2;
    // End of variables declaration//GEN-END:variables
}
